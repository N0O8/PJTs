import sys
import threading, time
from PyQt5.QtWidgets import *
from PyQt5.QtGui import  *
from PyQt5.QAxContainer import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *


class Kiwoom_OpenAPI(QAxWidget):
    def __init__(self):
        super().__init__()
        self.setControl("KHOPENAPI.KHOpenAPICtrl.1")


class Ui_MainWindow(Kiwoom_OpenAPI):
    def __init__(self):
        super().__init__()
        self.readonly_thread = ReadOnlyThread()
        self.readonly_thread.finished.connect(self.update_data)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(800, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        MainWindow.setMaximumSize(QtCore.QSize(800, 600))
        MainWindow.setSizeIncrement(QtCore.QSize(0, 0))
        MainWindow.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        MainWindow.setAcceptDrops(True)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.Korean, QtCore.QLocale.SouthKorea))
        MainWindow.setIconSize(QtCore.QSize(30, 30))

        self.widget = QtWidgets.QWidget(MainWindow)
        self.widget.setObjectName("widget")
        self.textBrowser = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 40, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())

        self.textBrowser.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser.setFont(font)
        self.textBrowser.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser.setAcceptDrops(False)
        self.textBrowser.setAutoFillBackground(False)
        self.textBrowser.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser.setLineWidth(0)
        self.textBrowser.setMidLineWidth(0)
        self.textBrowser.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser.setLineWrapColumnOrWidth(0)
        self.textBrowser.setOverwriteMode(False)
        self.textBrowser.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser.setPlaceholderText("")
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 70, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_2.sizePolicy().hasHeightForWidth())
        self.textBrowser_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_2.setFont(font)
        self.textBrowser_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_2.setAcceptDrops(False)
        self.textBrowser_2.setAutoFillBackground(False)
        self.textBrowser_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_2.setLineWidth(0)
        self.textBrowser_2.setMidLineWidth(0)
        self.textBrowser_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_2.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_2.setLineWrapColumnOrWidth(0)
        self.textBrowser_2.setOverwriteMode(False)
        self.textBrowser_2.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_2.setPlaceholderText("")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_3.setGeometry(QtCore.QRect(10, 100, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_3.sizePolicy().hasHeightForWidth())
        self.textBrowser_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_3.setFont(font)
        self.textBrowser_3.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_3.setAcceptDrops(False)
        self.textBrowser_3.setAutoFillBackground(False)
        self.textBrowser_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_3.setLineWidth(0)
        self.textBrowser_3.setMidLineWidth(0)
        self.textBrowser_3.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_3.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_3.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_3.setLineWrapColumnOrWidth(0)
        self.textBrowser_3.setOverwriteMode(False)
        self.textBrowser_3.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_3.setPlaceholderText("")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_4.setGeometry(QtCore.QRect(270, 70, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_4.sizePolicy().hasHeightForWidth())
        self.textBrowser_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_4.setFont(font)
        self.textBrowser_4.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_4.setAcceptDrops(False)
        self.textBrowser_4.setAutoFillBackground(False)
        self.textBrowser_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_4.setLineWidth(0)
        self.textBrowser_4.setMidLineWidth(0)
        self.textBrowser_4.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_4.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_4.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_4.setLineWrapColumnOrWidth(0)
        self.textBrowser_4.setOverwriteMode(False)
        self.textBrowser_4.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_4.setPlaceholderText("")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_5.setGeometry(QtCore.QRect(270, 100, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_5.sizePolicy().hasHeightForWidth())
        self.textBrowser_5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_5.setFont(font)
        self.textBrowser_5.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_5.setAcceptDrops(False)
        self.textBrowser_5.setAutoFillBackground(False)
        self.textBrowser_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_5.setLineWidth(0)
        self.textBrowser_5.setMidLineWidth(0)
        self.textBrowser_5.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_5.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_5.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_5.setLineWrapColumnOrWidth(0)
        self.textBrowser_5.setOverwriteMode(False)
        self.textBrowser_5.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_5.setPlaceholderText("")
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_6.setGeometry(QtCore.QRect(530, 10, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_6.sizePolicy().hasHeightForWidth())
        self.textBrowser_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_6.setFont(font)
        self.textBrowser_6.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_6.setAcceptDrops(False)
        self.textBrowser_6.setAutoFillBackground(False)
        self.textBrowser_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_6.setLineWidth(0)
        self.textBrowser_6.setMidLineWidth(0)
        self.textBrowser_6.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_6.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_6.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_6.setLineWrapColumnOrWidth(0)
        self.textBrowser_6.setOverwriteMode(False)
        self.textBrowser_6.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_6.setPlaceholderText("")
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_7.setGeometry(QtCore.QRect(530, 40, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_7.sizePolicy().hasHeightForWidth())
        self.textBrowser_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_7.setFont(font)
        self.textBrowser_7.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_7.setAcceptDrops(False)
        self.textBrowser_7.setAutoFillBackground(False)
        self.textBrowser_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_7.setLineWidth(0)
        self.textBrowser_7.setMidLineWidth(0)
        self.textBrowser_7.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_7.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_7.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_7.setLineWrapColumnOrWidth(0)
        self.textBrowser_7.setOverwriteMode(False)
        self.textBrowser_7.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_7.setPlaceholderText("")
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_8.setGeometry(QtCore.QRect(530, 70, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_8.sizePolicy().hasHeightForWidth())
        self.textBrowser_8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_8.setFont(font)
        self.textBrowser_8.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_8.setAcceptDrops(False)
        self.textBrowser_8.setAutoFillBackground(False)
        self.textBrowser_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_8.setLineWidth(0)
        self.textBrowser_8.setMidLineWidth(0)
        self.textBrowser_8.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_8.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_8.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_8.setLineWrapColumnOrWidth(0)
        self.textBrowser_8.setOverwriteMode(False)
        self.textBrowser_8.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_8.setPlaceholderText("")
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.textBrowser_9 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_9.setGeometry(QtCore.QRect(530, 100, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_9.sizePolicy().hasHeightForWidth())
        self.textBrowser_9.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_9.setFont(font)
        self.textBrowser_9.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_9.setAcceptDrops(False)
        self.textBrowser_9.setAutoFillBackground(False)
        self.textBrowser_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_9.setLineWidth(0)
        self.textBrowser_9.setMidLineWidth(0)
        self.textBrowser_9.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_9.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_9.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_9.setLineWrapColumnOrWidth(0)
        self.textBrowser_9.setOverwriteMode(False)
        self.textBrowser_9.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_9.setPlaceholderText("")
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_10.setGeometry(QtCore.QRect(530, 130, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_10.sizePolicy().hasHeightForWidth())
        self.textBrowser_10.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_10.setFont(font)
        self.textBrowser_10.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_10.setAcceptDrops(False)
        self.textBrowser_10.setAutoFillBackground(False)
        self.textBrowser_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_10.setLineWidth(0)
        self.textBrowser_10.setMidLineWidth(0)
        self.textBrowser_10.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_10.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_10.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_10.setLineWrapColumnOrWidth(0)
        self.textBrowser_10.setOverwriteMode(False)
        self.textBrowser_10.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_10.setPlaceholderText("")
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(370, 140, 75, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.pushButton.setPalette(palette)
        self.pushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pushButton.setAutoRepeatInterval(100)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setGeometry(QtCore.QRect(450, 140, 75, 23))
        self.pushButton_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pushButton_2.setObjectName("pushButton_2")
        self.textBrowser_11 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_11.setGeometry(QtCore.QRect(10, 10, 101, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_11.sizePolicy().hasHeightForWidth())
        self.textBrowser_11.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_11.setFont(font)
        self.textBrowser_11.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_11.setAcceptDrops(False)
        self.textBrowser_11.setAutoFillBackground(False)
        self.textBrowser_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_11.setLineWidth(0)
        self.textBrowser_11.setMidLineWidth(0)
        self.textBrowser_11.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_11.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_11.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_11.setLineWrapColumnOrWidth(0)
        self.textBrowser_11.setOverwriteMode(False)
        self.textBrowser_11.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_11.setPlaceholderText("")
        self.textBrowser_11.setObjectName("textBrowser_11")
        self.KOSPI_Text = QtWidgets.QTextBrowser(self.widget)
        self.KOSPI_Text.setGeometry(QtCore.QRect(110, 10, 161, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KOSPI_Text.sizePolicy().hasHeightForWidth())
        self.KOSPI_Text.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.KOSPI_Text.setFont(font)
        self.KOSPI_Text.setFocusPolicy(QtCore.Qt.NoFocus)
        self.KOSPI_Text.setAcceptDrops(False)
        self.KOSPI_Text.setAutoFillBackground(False)
        self.KOSPI_Text.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.KOSPI_Text.setLineWidth(0)
        self.KOSPI_Text.setMidLineWidth(0)
        self.KOSPI_Text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.KOSPI_Text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.KOSPI_Text.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.KOSPI_Text.setLineWrapColumnOrWidth(0)
        self.KOSPI_Text.setOverwriteMode(False)
        self.KOSPI_Text.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.KOSPI_Text.setPlaceholderText("")
        self.KOSPI_Text.setObjectName("KOSPI_Text")
        self.textBrowser_13 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_13.setGeometry(QtCore.QRect(270, 10, 101, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_13.sizePolicy().hasHeightForWidth())
        self.textBrowser_13.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_13.setFont(font)
        self.textBrowser_13.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_13.setAcceptDrops(False)
        self.textBrowser_13.setAutoFillBackground(False)
        self.textBrowser_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_13.setLineWidth(0)
        self.textBrowser_13.setMidLineWidth(0)
        self.textBrowser_13.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_13.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_13.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_13.setLineWrapColumnOrWidth(0)
        self.textBrowser_13.setOverwriteMode(False)
        self.textBrowser_13.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_13.setPlaceholderText("")
        self.textBrowser_13.setObjectName("textBrowser_13")
        self.KOSDAQ_Text = QtWidgets.QTextBrowser(self.widget)
        self.KOSDAQ_Text.setGeometry(QtCore.QRect(370, 10, 161, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KOSDAQ_Text.sizePolicy().hasHeightForWidth())
        self.KOSDAQ_Text.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.KOSDAQ_Text.setFont(font)
        self.KOSDAQ_Text.setFocusPolicy(QtCore.Qt.NoFocus)
        self.KOSDAQ_Text.setAcceptDrops(False)
        self.KOSDAQ_Text.setAutoFillBackground(False)
        self.KOSDAQ_Text.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.KOSDAQ_Text.setLineWidth(0)
        self.KOSDAQ_Text.setMidLineWidth(0)
        self.KOSDAQ_Text.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.KOSDAQ_Text.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.KOSDAQ_Text.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.KOSDAQ_Text.setLineWrapColumnOrWidth(0)
        self.KOSDAQ_Text.setOverwriteMode(False)
        self.KOSDAQ_Text.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.KOSDAQ_Text.setPlaceholderText("")
        self.KOSDAQ_Text.setObjectName("KOSDAQ_Text")
        self.RegisteredCondition = QtWidgets.QTableWidget(self.widget)
        self.RegisteredCondition.setGeometry(QtCore.QRect(10, 180, 781, 101))
        self.RegisteredCondition.setFocusPolicy(QtCore.Qt.NoFocus)
        self.RegisteredCondition.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.RegisteredCondition.setRowCount(0)
        self.RegisteredCondition.setColumnCount(6)
        self.RegisteredCondition.setObjectName("RegisteredCondition")
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.RegisteredCondition.setHorizontalHeaderItem(5, item)
        self.RegisteredCondition.horizontalHeader().setDefaultSectionSize(130)
        self.RegisteredCondition.horizontalHeader().setHighlightSections(False)
        self.RegisteredCondition.horizontalHeader().setSortIndicatorShown(False)
        self.RegisteredCondition.verticalHeader().setVisible(False)
        self.TotalBuy = QtWidgets.QLineEdit(self.widget)
        self.TotalBuy.setGeometry(QtCore.QRect(110, 70, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TotalBuy.sizePolicy().hasHeightForWidth())
        self.TotalBuy.setSizePolicy(sizePolicy)
        self.TotalBuy.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.TotalBuy.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.TotalBuy.setFont(font)
        self.TotalBuy.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.TotalBuy.setObjectName("TotalBuy")
        self.EachBuy = QtWidgets.QLineEdit(self.widget)
        self.EachBuy.setGeometry(QtCore.QRect(110, 100, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EachBuy.sizePolicy().hasHeightForWidth())
        self.EachBuy.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.EachBuy.setFont(font)
        self.EachBuy.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.EachBuy.setObjectName("EachBuy")
        self.Target_Profit = QtWidgets.QLineEdit(self.widget)
        self.Target_Profit.setGeometry(QtCore.QRect(370, 70, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Target_Profit.sizePolicy().hasHeightForWidth())
        self.Target_Profit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.Target_Profit.setFont(font)
        self.Target_Profit.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.Target_Profit.setObjectName("Target_Profit")
        self.Loss_Profit = QtWidgets.QLineEdit(self.widget)
        self.Loss_Profit.setGeometry(QtCore.QRect(370, 100, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Loss_Profit.sizePolicy().hasHeightForWidth())
        self.Loss_Profit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.Loss_Profit.setFont(font)
        self.Loss_Profit.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.Loss_Profit.setObjectName("Loss_Profit")
        self.AccountPassword = QtWidgets.QLineEdit(self.widget)
        self.AccountPassword.setGeometry(QtCore.QRect(630, 40, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AccountPassword.sizePolicy().hasHeightForWidth())
        self.AccountPassword.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.AccountPassword.setFont(font)
        self.AccountPassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.AccountPassword.setObjectName("AccountPassword")
        self.Balance = QtWidgets.QTextEdit(self.widget)
        self.Balance.setGeometry(QtCore.QRect(630, 70, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Balance.sizePolicy().hasHeightForWidth())
        self.Balance.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.Balance.setFont(font)
        self.Balance.setFocusPolicy(QtCore.Qt.NoFocus)
        self.Balance.setAcceptDrops(True)
        self.Balance.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.Balance.setLineWidth(0)
        self.Balance.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Balance.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Balance.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.Balance.setLineWrapColumnOrWidth(-1)
        self.Balance.setReadOnly(True)
        self.Balance.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.Balance.setPlaceholderText("")
        self.Balance.setObjectName("Balance")
        self.Account_TotalBuy = QtWidgets.QTextEdit(self.widget)
        self.Account_TotalBuy.setGeometry(QtCore.QRect(630, 100, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Account_TotalBuy.sizePolicy().hasHeightForWidth())
        self.Account_TotalBuy.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.Account_TotalBuy.setFont(font)
        self.Account_TotalBuy.setFocusPolicy(QtCore.Qt.NoFocus)
        self.Account_TotalBuy.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.Account_TotalBuy.setLineWidth(0)
        self.Account_TotalBuy.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Account_TotalBuy.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Account_TotalBuy.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.Account_TotalBuy.setLineWrapColumnOrWidth(-1)
        self.Account_TotalBuy.setReadOnly(True)
        self.Account_TotalBuy.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.Account_TotalBuy.setPlaceholderText("")
        self.Account_TotalBuy.setObjectName("Account_TotalBuy")
        self.Account_TotalEstimate = QtWidgets.QTextEdit(self.widget)
        self.Account_TotalEstimate.setGeometry(QtCore.QRect(630, 130, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Account_TotalEstimate.sizePolicy().hasHeightForWidth())
        self.Account_TotalEstimate.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.Account_TotalEstimate.setFont(font)
        self.Account_TotalEstimate.setFocusPolicy(QtCore.Qt.NoFocus)
        self.Account_TotalEstimate.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.Account_TotalEstimate.setLineWidth(0)
        self.Account_TotalEstimate.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Account_TotalEstimate.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Account_TotalEstimate.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.Account_TotalEstimate.setLineWrapColumnOrWidth(-1)
        self.Account_TotalEstimate.setReadOnly(True)
        self.Account_TotalEstimate.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.Account_TotalEstimate.setPlaceholderText("")
        self.Account_TotalEstimate.setObjectName("Account_TotalEstimate")
        self.MyAccount = QtWidgets.QTableWidget(self.widget)
        self.MyAccount.setGeometry(QtCore.QRect(10, 290, 471, 271))
        self.MyAccount.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.MyAccount.setObjectName("MyAccount")
        self.MyAccount.setColumnCount(5)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.MyAccount.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.MyAccount.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.MyAccount.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.MyAccount.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.MyAccount.setHorizontalHeaderItem(4, item)
        self.MyAccount.horizontalHeader().setDefaultSectionSize(94)
        self.MyAccount.verticalHeader().setVisible(False)
        self.FoundItem = QtWidgets.QTableWidget(self.widget)
        self.FoundItem.setGeometry(QtCore.QRect(480, 290, 311, 271))
        self.FoundItem.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.FoundItem.setObjectName("FoundItem")
        self.FoundItem.setColumnCount(4)
        #self.FoundItem.setRowCount(255)
        item = QtWidgets.QTableWidgetItem()
        self.FoundItem.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.FoundItem.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.FoundItem.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.FoundItem.setHorizontalHeaderItem(3, item)
        self.FoundItem.horizontalHeader().setDefaultSectionSize(78)
        self.FoundItem.horizontalHeader().setHighlightSections(False)
        self.FoundItem.verticalHeader().setVisible(False)
        self.ConditionList = QtWidgets.QComboBox(self.widget)
        self.ConditionList.setGeometry(QtCore.QRect(110, 40, 420, 30))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.ConditionList.setFont(font)
        self.ConditionList.setCurrentText("")
        self.ConditionList.setObjectName("ConditionList")
        self.ConditionList.setStyleSheet("background:rgb(255, 255, 255)")
        self.AccountList = QtWidgets.QComboBox(self.widget)
        self.AccountList.setGeometry(QtCore.QRect(630, 10, 163, 30))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.AccountList.setFont(font)
        self.AccountList.setCurrentText("")
        self.AccountList.setObjectName("AccountList")
        self.AccountList.setStyleSheet("background:rgb(255, 255, 255)")
        self.textBrowser_12 = QtWidgets.QTextBrowser(self.widget)
        self.textBrowser_12.setGeometry(QtCore.QRect(10, 130, 101, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_12.sizePolicy().hasHeightForWidth())
        self.textBrowser_12.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.textBrowser_12.setFont(font)
        self.textBrowser_12.setFocusPolicy(QtCore.Qt.NoFocus)
        self.textBrowser_12.setAcceptDrops(False)
        self.textBrowser_12.setAutoFillBackground(False)
        self.textBrowser_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_12.setLineWidth(0)
        self.textBrowser_12.setMidLineWidth(0)
        self.textBrowser_12.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_12.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_12.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.textBrowser_12.setLineWrapColumnOrWidth(0)
        self.textBrowser_12.setOverwriteMode(False)
        self.textBrowser_12.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.textBrowser_12.setPlaceholderText("")
        self.textBrowser_12.setObjectName("textBrowser_12")
        self.ServerState = QtWidgets.QTextEdit(self.widget)
        self.ServerState.setGeometry(QtCore.QRect(110, 130, 161, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ServerState.sizePolicy().hasHeightForWidth())
        self.ServerState.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(10)
        self.ServerState.setFont(font)
        self.ServerState.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ServerState.setAcceptDrops(True)
        self.ServerState.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.ServerState.setLineWidth(0)
        self.ServerState.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.ServerState.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.ServerState.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.ServerState.setLineWrapColumnOrWidth(-1)
        self.ServerState.setReadOnly(True)
        self.ServerState.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.ServerState.setPlaceholderText("")
        self.ServerState.setObjectName("ServerState")
        MainWindow.setCentralWidget(self.widget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Kiwoom Login
        self.dynamicCall("CommConnect()")

        # OpenAPI+ Event
        self.OnEventConnect.connect(self.event_connect)
        self.OnReceiveTrData.connect(self.receive_trdata)
        self.OnReceiveConditionVer.connect(self.receive_conditionver)
        self.OnReceiveTrCondition.connect(self.receive_trcondition)

        self.foundcounter = 0;
        self.condcounter = 0;
        self.accountcounter = 0;

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">조건식</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:1pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">총매입금액</p></body></html>"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">종목당 매입액</span></p></body></html>"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">목표수익률</span></p></body></html>"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">손절률</span></p></body></html>"))
        self.textBrowser_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">계좌번호</span></p></body></html>"))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">비밀번호</span></p></body></html>"))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">잔고</span></p></body></html>"))
        self.textBrowser_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">총매입금액</span></p></body></html>"))
        self.textBrowser_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">총평가금액</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "시작"))
        self.pushButton_2.setText(_translate("MainWindow", "중지"))
        self.textBrowser_11.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">KOSPI</span></p></body></html>"))
        self.KOSPI_Text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'굴림\';\"><br /></p></body></html>"))
        self.textBrowser_13.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">KOSDAQ</span></p></body></html>"))
        self.KOSDAQ_Text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'굴림\';\"><br /></p></body></html>"))
        item = self.RegisteredCondition.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "상태"))
        item = self.RegisteredCondition.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "조건식"))
        item = self.RegisteredCondition.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "총매입금액"))
        item = self.RegisteredCondition.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "종목당 매입금액"))
        item = self.RegisteredCondition.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "목표수익률"))
        item = self.RegisteredCondition.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "손절률"))
        self.Balance.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Gulim\'; font-size:9pt;\"><br /></p></body></html>"))
        self.Account_TotalBuy.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Gulim\'; font-size:9pt;\"><br /></p></body></html>"))
        self.Account_TotalEstimate.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Gulim\'; font-size:9pt;\"><br /></p></body></html>"))
        item = self.MyAccount.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "종목"))
        item = self.MyAccount.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "매입가"))
        item = self.MyAccount.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "수량"))
        item = self.MyAccount.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "현재가"))
        item = self.MyAccount.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "평가손익"))
        item = self.FoundItem.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "종목"))
        item = self.FoundItem.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "현재가"))
        item = self.FoundItem.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "목표가"))
        item = self.FoundItem.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "조건식"))

        self.textBrowser_12.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:3pt;\"> </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gulim\'; vertical-align:middle;\">서버상태</span></p></body></html>"))
        self.ServerState.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'굴림\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Gulim\'; font-size:9pt;\"><br /></p></body></html>"))

    def event_connect(self, err_code):
        if err_code == 0:
            print("로그인 성공")
            self.account_num = self.dynamicCall("GetLoginInfo(QString)", ["ACCNO"])
            print("계좌번호: " + self.account_num.rstrip(';'))
            self.AccountList.addItem(self.account_num.rstrip(';'))
            self.readonly_thread.start()
            self.dynamicCall("GetConditionLoad()")

    def cGetCommData(self, trcode, rqname, index, itemname):
        while True:
            ret = self.GetCommData(trcode, rqname, index, itemname).replace(" ", "")
            if ret.strip():
                break
        return ret

    def cCommRqData(self, trcode, rqname, index, itemname):
        while True:
            ret = str(self.CommRqData(trcode, rqname, index, itemname))
            if ret == "-200":
                print("sleep due to failed")
                time.sleep(0.2)
            else:
                print("success break")
                break

    def receive_trdata(self, scrno, rqname, trcode, record_name, next, unused1, unused2, unused3, unused4):
        if rqname == "Read_Account":
            self.update_account(rqname, trcode)
        elif rqname == "Read_KOSPI":
            self.update_kospi(rqname, trcode)
        elif rqname == "Read_KOSDAQ":
            self.update_kosdaq(rqname, trcode)
        elif rqname == "GetCodeInfo":
            self.update_founditem(rqname, trcode)

    def receive_conditionver(self, ret, msg):
        if ret == 1:
            self.cond_list = self.dynamicCall("GetConditionNameList()").split(';')
            for i in self.cond_list:
                self.cond_name = i.split('^')
                if self.cond_name[0].strip():
                    self.ConditionList.addItem(self.cond_name[1])
                    self.dynamicCall("SendCondition(QString, QString, int, int)", self.cond_name[1], self.cond_name[1], int(self.cond_name[0]), 1)
            #self.ConditionList.currentTextChanged.connect()

    def receive_trcondition(self, scrno, codelist, cond_name, index, next):
        print(cond_name)
        print(codelist)
        if not codelist.strip():
            return

        self.code_list = codelist.split(';')
        print(self.code_list)
        for i in self.code_list:
            if not i.strip():
                continue
            strCodeName = self.GetMasterCodeName(i)
            self.SetInputValue("종목코드", i);
            self.cCommRqData("GetCodeInfo", "opt10001", 0, i)


    def update_data(self):
        self.dynamicCall("SetInputValue(QString, QString)", "계좌번호", self.account_num.rstrip(';'))
        self.dynamicCall("SetInputValue(QString, QString)", "비밀번호", "0000")
        self.dynamicCall("SetInputValue(QString, QString)", "상장폐지조회구분", "0")
        self.dynamicCall("SetInputValue(QString, QString)", "비밀번호입력매체구분", "00")
        self.dynamicCall("CommRqData(QString, QString, int, QString)", "Read_Account", "OPW00004", 0, "0101")

        self.dynamicCall("SetInputValue(QString, QString)", "업종코드", "001")
        self.dynamicCall("CommRqData(QString, QString, int, QString)", "Read_KOSPI", "opt20003"	, 0, "0102")
        self.dynamicCall("SetInputValue(QString, QString)", "업종코드", "101")
        self.dynamicCall("CommRqData(QString, QString, int, QString)", "Read_KOSDAQ", "opt20003", 0, "0103")

    def update_account(self, rqname, trcode):
        balance = self.cGetCommData(trcode, rqname, 0, "예수금")
        self.Balance.setText(format(int(balance), ','))
        account_totalbuy = self.cGetCommData(trcode, rqname, 0, "총매입금액")
        self.Account_TotalBuy.setText(format(int(account_totalbuy), ','))
        account_totalestimate_tmp1 = self.cGetCommData(trcode, rqname, 0, "유가잔고평가액")
        account_totalestimate_tmp2 = self.cGetCommData(trcode, rqname, 0, "예탁자산평가액")
        account_totalestimate = int(account_totalestimate_tmp1) + int(account_totalestimate_tmp2)
        self.Account_TotalEstimate.setText(format(account_totalestimate, ','))

        count = self.GetRepeatCnt(trcode, rqname)

        self.MyAccount.setRowCount(count)
        #self.MyAccount.setitem(1, 0, QTableWidgetItem("test"))
        for i in range(0, count):
            codename = self.cGetCommData(trcode, rqname, i, "종목명")
            buyprice = self.cGetCommData(trcode, rqname, i, "평균단가")
            buycount = self.cGetCommData(trcode, rqname, i, "보유수량")
            currentprice = self.cGetCommData(trcode, rqname, i, "현재가")
            profit = self.cGetCommData(trcode, rqname, i, "손익율")

            #self.MyAccount.setitem(1, 0, QTableWidgetItem(codename))
            #self.MyAccount.setitem(i, 1, QTableWidgetItem(buyprice))
            #self.MyAccount.setitem(i, 2, QTableWidgetItem(buycount))
            #self.MyAccount.setitem(i, 3, QTableWidgetItem(currentprice))
            #self.MyAccount.setitem(i, 4, QTableWidgetItem(profit))

    def update_kospi(self, rqname, trcode):
        kospi = round(float(self.cGetCommData(trcode, rqname, 0, "현재가")), 1)
        diff = round(float(self.cGetCommData(trcode, rqname, 0, "전일대비")), 1)
        per = round(float(self.cGetCommData(trcode, rqname, 0, "등락률")), 2)

        if kospi <= 0:
            kospi = kospi * -1
            diff = diff * -1
            self.KOSPI_Text.setTextColor((QtGui.QColor(0, 0, 255)))
            self.KOSPI_Text.setText(str(format(kospi, ',')) + "  ▼" + str(diff) + "  " + str(per) + "%")
        else:
            self.KOSPI_Text.setTextColor((QtGui.QColor(255, 0, 0)))
            self.KOSPI_Text.setText(str(format(kospi, ',')) + "  ▲" + str(diff) + "  " + str(per) + "%")

    def update_kosdaq(self, rqname, trcode):
        kosdaq = round(float(self.cGetCommData(trcode, rqname, 0, "현재가")), 2)
        diff = round(float(self.cGetCommData(trcode, rqname, 0, "전일대비")), 2)
        per = round(float(self.cGetCommData(trcode, rqname, 0, "등락률")), 2)

        if kosdaq <= 0:
            kosdaq = kosdaq * -1
            diff = diff * -1
            self.KOSDAQ_Text.setTextColor((QtGui.QColor(0, 0, 255)))
            self.KOSDAQ_Text.setText(str(format(kosdaq, ',')) + "  ▼" + str(diff) + "  " + str(per) + "%")
        else:
            self.KOSDAQ_Text.setTextColor((QtGui.QColor(255, 0, 0)))
            self.KOSDAQ_Text.setText(str(format(kosdaq, ',')) + "  ▲" + str(diff) + "  " + str(per) + "%")

    def update_founditem(self, rqname, trcode):
        codename = self.cGetCommData(trcode, rqname, 0, "종목명")
        current = self.cGetCommData(trcode, rqname, 0, "현재가").replace("+", "").replace("-", "")

        print(codename)
        self.FoundItem.insertRow(self.foundcounter)
        self.FoundItem.setItem(self.foundcounter, 0, QTableWidgetItem(codename))
        self.FoundItem.setItem(self.foundcounter, 1, QTableWidgetItem(current))
        self.foundcounter += 1
        return

class ReadOnlyThread(QThread):
    def __init__(self):
        QThread.__init__(self)

    def run(self):
        while True:
            self.finished.emit()
            time.sleep(5)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    api = Kiwoom_OpenAPI()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
